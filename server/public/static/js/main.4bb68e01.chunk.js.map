{"version":3,"sources":["FormComponent.js","ResultComponent.js","App.js","serviceWorker.js","index.js"],"names":["FormComponent","props","className","class","id","type","name","placeholder","value","data","longURL","onChange","handleChange","checked","useCustomShortURL","usePreview","onClick","handleSubmit","style","display","customShortURL","href","role","aria-label","ResultComponent","displayText","shortURL","resultErrorMessage","text","handleClickCopy","handleReturnToHome","hasCopiedToClipboard","App","getShortURL","a","async","fetch","method","headers","body","JSON","stringify","state","response","console","error","json","responseBody","log","status","setState","shortUrl","errorCode","submitted","bind","event","target","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bb68e01.chunk.js","sourcesContent":["import React from \"react\";\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\n\nfunction FormComponent(props) {\n\treturn (\n\t\t<main>\n\t\t\t{/* Main section */}\n\t\t\t<section className=\"section\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{/* Page logo and title */}\n\t\t\t\t\t<section class=\"section\" id=\"title-section\">\n\t\t\t\t\t\t<h1 class=\"title has-text-centered\"> Shrinkly </h1>\n\t\t\t\t\t\t{/* <h6 class=\"subtitle is-6 has-text-centered\">\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\ta URL shortener{\" \"}\n\t\t\t\t\t\t</h6> */}\n\t\t\t\t\t</section>\n\t\t\t\t\t{/* End of page logo and title */}\n\n\t\t\t\t\t{/* Input form */}\n\t\t\t\t\t<section className=\"section\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<section class=\"section\">\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"columns is-mobile is-gapless\">\n\t\t\t\t\t\t\t\t\t\t{/* Left column */}\n\t\t\t\t\t\t\t\t\t\t<div class=\"column is-9\">\n\t\t\t\t\t\t\t\t\t\t\t{/* Textfield input for long URL */}\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"input is-primary is-medium is-small-mobile\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"longURL\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter a URL to shrink\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.data.longURL}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<nav class=\"level is-mobile\">\n\t\t\t\t\t\t\t\t\t\t\t\t{/* Checkbox input for custom short URL textfield */}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"level-left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"checkbox\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"useCustomShortURL\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.handleChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.data\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.useCustomShortURL\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCustom URL\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* Checkbox input for \"Preview\" option */}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"checkbox\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tPreview\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"  \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"usePreview\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.handleChange\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.data\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.usePreview\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{/* End of left column for main textfield and extra options */}\n\t\t\t\t\t\t\t\t\t\t{/* Start of right column for Submit button */}\n\t\t\t\t\t\t\t\t\t\t<div class=\"column is-3\">\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"button is-primary is-medium is-fullwidth\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={props.handleSubmit}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"is-size-6-mobile\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tShrink!\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{/* End of right column for Submit button */}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t{/* Textfield input for \"Use Custom Short URL\" option */}\n\t\t\t\t\t\t\t\t<div class=\"field has-addons\">\n\t\t\t\t\t\t\t\t\t<p class=\"control\">\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclass=\"button is-small is-static\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\t\t\t\t!props.data\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.useCustomShortURL &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"none\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\thttps://localhost:3000/\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p class=\"control is-fullwidth is-expanded\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclass=\"input is-small is-expanded is-fullwidth\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"customShortURL\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"<insert custom URL>\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={props.data.customShortURL}\n\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\t\t\t\t!props.data\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.useCustomShortURL &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"none\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* End of textfield input for \"Use Custom Short URL\" option */}\n\t\t\t\t\t\t\t\t{/* Info box that displays custom URL specifications */}\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass=\"notification\"\n\t\t\t\t\t\t\t\t\tid=\"custom-url-notification\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\t\t!props.data.useCustomShortURL &&\n\t\t\t\t\t\t\t\t\t\t\t\"none\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tYour custom URL must have a length\n\t\t\t\t\t\t\t\t\t\tbetween 4 to 20, inclusive, and contain\n\t\t\t\t\t\t\t\t\t\tat least 4 alphanumeric characters (a-z,\n\t\t\t\t\t\t\t\t\t\tA-Z, 0-9).\n\t\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t\tExample:{\" \"}\n\t\t\t\t\t\t\t\t\t\t<a href=\"https://localhost:3000/helloworld\">\n\t\t\t\t\t\t\t\t\t\t\thttps://localhost:3000/helloworld\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* End of info box that displays custom URL specifications */}\n\t\t\t\t\t\t\t\t{/* Info box that explains what Preview is */}\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass=\"notification\"\n\t\t\t\t\t\t\t\t\tid=\"preview-notification\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\t\t!props.data.usePreview && \"none\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tUsers will be re-directed to an\n\t\t\t\t\t\t\t\t\t\tintermediary landing page that displays\n\t\t\t\t\t\t\t\t\t\tthe designated long URL. This gives\n\t\t\t\t\t\t\t\t\t\tusers peace of mind as they can verify\n\t\t\t\t\t\t\t\t\t\tthe URL before continuing.\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t\tExample:{\" \"}\n\t\t\t\t\t\t\t\t\t\t<a href=\"https://localhost:3000/preview/helloworld\">\n\t\t\t\t\t\t\t\t\t\t\thttps://localhost:3000/preview/helloworld\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* End of info box that explains what Preview is */}\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</section>\n\t\t\t\t\t{/* End of Input form */}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t{/* End of main section */}\n\t\t\t{/* Footer */}\n\t\t\t<footer class=\"footer content has-text-centered\">\n\t\t\t\t<p>\n\t\t\t\t\tMade with{\" \"}\n\t\t\t\t\t{\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"coffee\">\n\t\t\t\t\t\t\t☕\n\t\t\t\t\t\t</span>\n\t\t\t\t\t}\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tSee the source code on\n\t\t\t\t\t<a href=\"https://github.com/matthuynh/url-shortener\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tGitHub\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</footer>\n\t\t</main>\n\t);\n}\n\nexport default FormComponent;\n","import React from \"react\";\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\n// If the user provided a valid long URL, displays the short URL. Otherwise, prompts user to try again.\nfunction ResultComponent(props) {\n\tlet displayText = props.data.shortURL\n\t\t? \"Your short URL is \" + props.data.shortURL\n\t\t: props.data.resultErrorMessage;\n\n\treturn (\n\t\t<main>\n\t\t\t{/* Main section */}\n\t\t\t<section class=\"section\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"container has-text-centered is-desktop\"\n\t\t\t\t\tid=\"result-main\"\n\t\t\t\t>\n\t\t\t\t\t{/* Beginning of main text container */}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass={\n\t\t\t\t\t\t\t\"notification \" +\n\t\t\t\t\t\t\t(props.data.shortURL ? \"is-primary\" : \"is-warning\")\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p class=\"content is-medium\"> {displayText} </p>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* End of text container */}\n\n\t\t\t\t\t{/* Beginning of form */}\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<div class=\"buttons are-medium is-centered\">\n\t\t\t\t\t\t\t{/* Copy to Clipboard button */}\n\t\t\t\t\t\t\t<CopyToClipboard text={props.data.shortURL}>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass=\"button\"\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: !props.data.shortURL && \"none\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={props.handleClickCopy}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCopy to clipboard\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</CopyToClipboard>\n\n\t\t\t\t\t\t\t{/* 'Go back' button */}\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"button is-primary is-outlined\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={props.handleReturnToHome}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tGo back\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t{/* End of form */}\n\n\t\t\t\t\t{/* Alerts user they have copied to clipboard */}\n\t\t\t\t\t<br />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tclass=\"content\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t!props.data.hasCopiedToClipboard && \"none\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSuccessfully copied to clipboard!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t{/* End of main section */}\n\n\t\t\t{/* Footer */}\n\t\t\t<footer class=\"footer content has-text-centered\">\n\t\t\t\t<p>\n\t\t\t\t\tMade with{\" \"}\n\t\t\t\t\t{\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"coffee\">\n\t\t\t\t\t\t\t☕\n\t\t\t\t\t\t</span>\n\t\t\t\t\t}\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tSee the source code on\n\t\t\t\t\t<a href=\"https://github.com/matthuynh/url-shortener\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tGitHub\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</footer>\n\t\t</main>\n\t);\n}\n\nexport default ResultComponent;\n","import React from 'react';\nimport FormComponent from \"./FormComponent\";\nimport ResultComponent from './ResultComponent';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n      super()\n      this.state = {\n          longURL: \"\",\n          shortURL: \"\",\n          submitted: false,\n          usePreview: false,\n          useCustomShortURL: false,\n          customShortURL: \"\",\n          resultErrorMessage: \"\",\n          hasCopiedToClipboard: false,\n      }\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleReturnToHome = this.handleReturnToHome.bind(this);\n      this.handleClickCopy = this.handleClickCopy.bind(this);\n  }\n  \n  // Given a longURL, get a shortURL from backend\n  getShortURL = async () => {\n    // POST request to API with the longURL\n    let response;\n    try {\n      response = await fetch('/api/url/shorten/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ \n          longURL: this.state.longURL,\n          useCustomShortURL: this.state.useCustomShortURL,\n          customShortURL: this.state.customShortURL,\n          usePreview: this.state.usePreview\n        }),\n      });\n    } catch (error) {\n      console.error(error);\n    }\n\n    // User entered in a valid long URL \n    const responseBody = await response.json();\n    console.log(responseBody);\n    if (response.status === 200) this.setState({ shortURL: responseBody.shortUrl});\n    else {\n      if (responseBody.errorCode === 1001) this.setState({ resultErrorMessage: \"Your custom short URL '\" + this.state.customShortURL + \"' is in an invalid format. Try another short URL.\"});\n      else if (responseBody.errorCode === 1002) this.setState({ resultErrorMessage: \"Your custom short URL already exists. Try another short URL.\" });\n      else if (responseBody.errorCode === 1004) this.setState({ resultErrorMessage: \"You entered in an invalid long URL. Try another long URL.\" });\n      else this.setState({ resultErrorMessage: \"Internal Server Error. Something is wrong on our end. Sorry! \"});\n    }\n  }\n\n  // User modified any form elements (not including the 'Submit' button)\n  handleChange(event) {\n      // Figure out which of the form elements triggered handleChange(). Update state accordingly\n      if (event.target.type === \"checkbox\") {\n          this.setState({\n              [event.target.name]: event.target.checked\n          })\n      } else {\n          this.setState({\n              [event.target.name]: event.target.value\n          })\n      }\n  }\n  \n  // User clicked the 'Submit' button\n  handleSubmit(){\n      console.log(\"Pressed 'Submit' button\");\n      this.setState({submitted: true});\n      this.getShortURL();\n  }\n\n  // User clicks on the 'Return to Home' button\n  handleReturnToHome(){ \n    this.setState({\n      longURL: \"\",\n      shortURL: \"\",\n      submitted: false,\n      usePreview: false,\n      useCustomShortURL: false,\n      customShortURL: \"\",\n      resultErrorMessage: \"\",\n      hasCopiedToClipboard: false\n      });\n  }\n\n  // User clicks on 'Copy to Clipboard' button\n  handleClickCopy() {\n    this.setState({\n      hasCopiedToClipboard: true\n    })\n  }\n  \n  render() {\n    // By default, renders the home page to the user\n    if (!this.state.submitted) {\n      return (\n        <div class=\"bigDiv\">\n          <FormComponent \n            handleChange={this.handleChange}\n            data={this.state}\n            handleSubmit={this.handleSubmit}\n          />\n        </div>\n      )\n    }\n    // Display result to user. They can choose to input another long URL \n    return (\n      <div class=\"bigDiv\">\n        <ResultComponent\n          data={this.state}\n          handleReturnToHome={this.handleReturnToHome}\n          handleClickCopy={this.handleClickCopy}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}